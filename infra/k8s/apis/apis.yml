{{- range $svc := list "member" "account" "contract" "credit" "mydata" }}

--- # {{ $svc }} API Deployment 정의 시작
apiVersion: apps/v1  # API 버전
kind: Deployment  # 디플로이먼트 리소스
metadata:
  name: {{ $svc }}-api  # 디플로이먼트 이름
  namespace: mosaic  # 소속 네임스페이스
spec:
  replicas: 1  # 파드 개수 1개
  selector:
    matchLabels:
      app: {{ $svc }}-api  # 이 라벨과 일치하는 파드만 선택
  template:
    metadata:
      labels:
        app: {{ $svc }}-api  # 라벨 지정 (서비스 셀렉터와 매칭됨)
    spec:
      {{- if or (eq $svc "mydata") (eq $svc "member") }}  # ✅ mydata와 member를 control 노드
      nodeSelector:
        disktype: control
      {{- else }}
      nodeSelector:
        disktype: worker
      {{- end}}
      containers:
        - name: {{ $svc }}-service  # 컨테이너 이름
          image: mosaic/{{ $svc }}-api:deploy  # 사용할 이미지
          ports:
            - containerPort: 8080  # Spring Boot 기본 포트
          env:  # 환경 변수로 DB 접속 설정
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://{{ $svc }}-db:3306/mosaic_{{ $svc }}  # DB URL
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ $svc }}  # DB 사용자명
            - name: SPRING_DATASOURCE_PASSWORD
              value: "608"  # DB 비밀번호

--- # {{ $svc }} API Service 정의 시작
apiVersion: v1
kind: Service
metadata:
  name: {{ $svc }}-api  # 서비스 이름
  namespace: mosaic  # 소속 네임스페이스
spec:
  selector:
    app: {{ $svc }}-api  # 해당 라벨을 가진 파드와 연결됨
  ports:
    - protocol: TCP  # 프로토콜 TCP
      port: 8080  # 서비스 포트
      targetPort: 8080  # 파드 내부 포트와 매핑
{{- end }}